<?php

/**
 * BasestPicture
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $record_id
 * @property string $record_model
 * @property integer $position
 * @property string $caption
 * @property string $image
 * @property integer $image_width
 * @property integer $image_height
 * @property string $thumbnail
 * @property integer $thumbnail_width
 * @property integer $thumbnail_height
 * @property string $source
 * @property boolean $is_published
 * @property array $params
 * 
 * @method integer   getId()               Returns the current record's "id" value
 * @method integer   getRecordId()         Returns the current record's "record_id" value
 * @method string    getRecordModel()      Returns the current record's "record_model" value
 * @method integer   getPosition()         Returns the current record's "position" value
 * @method string    getCaption()          Returns the current record's "caption" value
 * @method string    getImage()            Returns the current record's "image" value
 * @method integer   getImageWidth()       Returns the current record's "image_width" value
 * @method integer   getImageHeight()      Returns the current record's "image_height" value
 * @method string    getThumbnail()        Returns the current record's "thumbnail" value
 * @method integer   getThumbnailWidth()   Returns the current record's "thumbnail_width" value
 * @method integer   getThumbnailHeight()  Returns the current record's "thumbnail_height" value
 * @method string    getSource()           Returns the current record's "source" value
 * @method boolean   getIsPublished()      Returns the current record's "is_published" value
 * @method array     getParams()           Returns the current record's "params" value
 * @method stPicture setId()               Sets the current record's "id" value
 * @method stPicture setRecordId()         Sets the current record's "record_id" value
 * @method stPicture setRecordModel()      Sets the current record's "record_model" value
 * @method stPicture setPosition()         Sets the current record's "position" value
 * @method stPicture setCaption()          Sets the current record's "caption" value
 * @method stPicture setImage()            Sets the current record's "image" value
 * @method stPicture setImageWidth()       Sets the current record's "image_width" value
 * @method stPicture setImageHeight()      Sets the current record's "image_height" value
 * @method stPicture setThumbnail()        Sets the current record's "thumbnail" value
 * @method stPicture setThumbnailWidth()   Sets the current record's "thumbnail_width" value
 * @method stPicture setThumbnailHeight()  Sets the current record's "thumbnail_height" value
 * @method stPicture setSource()           Sets the current record's "source" value
 * @method stPicture setIsPublished()      Sets the current record's "is_published" value
 * @method stPicture setParams()           Sets the current record's "params" value
 * 
 * @package    ##PROJECT_NAME##
 * @subpackage model
 * @author     ##AUTHOR_NAME##
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasestPicture extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('st_picture');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('record_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('record_model', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('caption', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('image', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('image_width', 'integer', 3, array(
             'type' => 'integer',
             'length' => 3,
             ));
        $this->hasColumn('image_height', 'integer', 3, array(
             'type' => 'integer',
             'length' => 3,
             ));
        $this->hasColumn('thumbnail', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('thumbnail_width', 'integer', 3, array(
             'type' => 'integer',
             'length' => 3,
             ));
        $this->hasColumn('thumbnail_height', 'integer', 3, array(
             'type' => 'integer',
             'length' => 3,
             ));
        $this->hasColumn('source', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('is_published', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('params', 'array', null, array(
             'type' => 'array',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}